{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TokenService {\n  static getToken() {\n    throw new Error('Method not implemented.');\n  }\n  // static getToken: any;\n  constructor() {\n    this.TOKEN_KEY = 'auth_token';\n  }\n  // Getters y Setters de la info del localStorage //\n  getToken() {\n    return localStorage.getItem(this.TOKEN_KEY) || 'default';\n  }\n  getRole() {\n    return parseInt(localStorage.getItem('userRole') || '1');\n  }\n  setToken(token) {\n    localStorage.setItem(this.TOKEN_KEY, token.access_token);\n    localStorage.setItem('userRole', token.rol);\n  }\n  // Funciones para eliminar el token y el rol del localStorage //\n  removeToken() {\n    try {\n      localStorage.removeItem(this.TOKEN_KEY);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }\n  removeRole() {\n    try {\n      localStorage.removeItem('userRole');\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }\n  static #_ = this.ɵfac = function TokenService_Factory(t) {\n    return new (t || TokenService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TokenService,\n    factory: TokenService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["TokenService","getToken","Error","constructor","TOKEN_KEY","localStorage","getItem","getRole","parseInt","setToken","token","setItem","access_token","rol","removeToken","removeItem","error","removeRole","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Edgar\\Documents\\GitHub\\ProjectXuemons\\Sprint3\\angularCarpeta\\src\\app\\services\\token.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TokenService {\r\n  static getToken() {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  // static getToken: any;\r\n  constructor() { }\r\n\r\n  private readonly TOKEN_KEY = 'auth_token';\r\n\r\n  // Getters y Setters de la info del localStorage //\r\n  getToken(): string | null {\r\n    return localStorage.getItem(this.TOKEN_KEY) || 'default';\r\n  }\r\n  getRole(): number | null {\r\n    return parseInt(localStorage.getItem('userRole') || '1');\r\n  }\r\n  setToken(token: any): void {\r\n    localStorage.setItem(this.TOKEN_KEY, token.access_token);\r\n    localStorage.setItem('userRole', token.rol);\r\n  }\r\n\r\n  // Funciones para eliminar el token y el rol del localStorage //\r\n  removeToken(): boolean {\r\n    try {\r\n      localStorage.removeItem(this.TOKEN_KEY);\r\n      return true;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n  removeRole(): boolean {\r\n    try {\r\n      localStorage.removeItem('userRole');\r\n      return true;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n"],"mappings":";AAKA,OAAM,MAAOA,YAAY;EACvB,OAAOC,QAAQA,CAAA;IACb,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EACA;EACAC,YAAA;IAEiB,KAAAC,SAAS,GAAG,YAAY;EAFzB;EAIhB;EACAH,QAAQA,CAAA;IACN,OAAOI,YAAY,CAACC,OAAO,CAAC,IAAI,CAACF,SAAS,CAAC,IAAI,SAAS;EAC1D;EACAG,OAAOA,CAAA;IACL,OAAOC,QAAQ,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC;EAC1D;EACAG,QAAQA,CAACC,KAAU;IACjBL,YAAY,CAACM,OAAO,CAAC,IAAI,CAACP,SAAS,EAAEM,KAAK,CAACE,YAAY,CAAC;IACxDP,YAAY,CAACM,OAAO,CAAC,UAAU,EAAED,KAAK,CAACG,GAAG,CAAC;EAC7C;EAEA;EACAC,WAAWA,CAAA;IACT,IAAI;MACFT,YAAY,CAACU,UAAU,CAAC,IAAI,CAACX,SAAS,CAAC;MACvC,OAAO,IAAI;KACZ,CAAC,OAAOY,KAAK,EAAE;MACd,OAAO,KAAK;;EAEhB;EACAC,UAAUA,CAAA;IACR,IAAI;MACFZ,YAAY,CAACU,UAAU,CAAC,UAAU,CAAC;MACnC,OAAO,IAAI;KACZ,CAAC,OAAOC,KAAK,EAAE;MACd,OAAO,KAAK;;EAEhB;EAAC,QAAAE,CAAA,G;qBArCUlB,YAAY;EAAA;EAAA,QAAAmB,EAAA,G;WAAZnB,YAAY;IAAAoB,OAAA,EAAZpB,YAAY,CAAAqB,IAAA;IAAAC,UAAA,EAFX;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}